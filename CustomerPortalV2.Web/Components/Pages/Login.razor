@rendermode InteractiveServer
@page "/"
@using CustomerPortalV2.Web.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject UserSession Session

<h3>Login</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p style="color:red">@ErrorMessage</p>
}

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" class="form-control" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    public string ErrorMessage { get; set; } = "";

    private bool isSubmitting = false;

    private async Task HandleLogin()
    {
        if (isSubmitting) return;
        isSubmitting = true;

        try
        {
            var inputUser = loginModel.Username?.Trim() ?? "";
            var inputPass = loginModel.Password?.Trim() ?? "";

            using var context = DbFactory.CreateDbContext();

            var user = await context.Users
                .FirstOrDefaultAsync(u =>
                    u.Username.Trim() == inputUser &&
                    u.Password.Trim() == inputPass);


            if (user != null)
            {
                Session.Login(user.Username);
                Navigation.NavigateTo("/home", forceLoad: true);

            }
            else
            {
                ErrorMessage = "Invalid username or password.";
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine("LOGIN ERROR: " + ex.Message);
            ErrorMessage = "An error occurred. Check console.";
        }
    }


    public class LoginModel
    {
        [Required(ErrorMessage = "Username is required")]
        public string Username { get; set; } = "";

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = "";
    }
}
